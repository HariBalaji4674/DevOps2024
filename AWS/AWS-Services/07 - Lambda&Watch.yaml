Lambda Function:
Solving the below problems
Compute
ServerLess

Event Driven Actions

Cloud Watch Event --> Trigger Event --> In lamdba Function --> Integrate with SNS/SQS --> Email
#

  # import json

  # def lambda-handler(event,context)

  # return
  # {
  #   'statusCode': 200
  #   'body' : json.dumps("Hello Lambda Functions")
  # }
#

Problem statement:
EBS Volume SnapShots Which is not used by Any Volume or EC2 Instances
A User created EBS & SnapShots & EC2 has deleted all those Just snapshots are remaining

Usages:
1: Cloud watch
2: Lambda Function
3: Boto3 Module In Python
4: Send SMS to user Created (SNS)
5: IAM Roles is needed to describe the instance

Lambda Function : Will also give compute
It is server less and can execute the application
it will run automatically with out making the compute services visible to the user

Cost Optimization/Estimation :
  ServerLess --> Cost Optimization
  Security --> Very Important in public cloud
  Compliance --> how secure the application .

Cloud Cost Optimization:
If You are not managing the cloud cost doing efficiently

Lambda Function --> EBS Volume SnapShots

Write a lambda Function (Python Code)
This will talk to the AWS API
Fetch all the EBS Snapshots
Filter out SnapShots

What is SnapShots:
  EBS Snapshots are a point-in-time copy of your data, and can be used to enable disaster recovery, migrate data across regions and accounts, and improve backup compliance. You can create and manage your EBS Snapshots through the AWS Management Console, AWS Command Line Interface (CLI), or the AWS SDKs.

Cloud Watch :
  Fundamentals
  Metrics
  Alerts
  Custom Metrics

Demo:
  Metrics (default)
  Custom Metrics

What is Cloud Watch:
Cloud : Resource Creator
Watch : Gate Keeper
Cloud watch is a person can see all details about cloud in cloud watch

A Gate keeper for my aws account which can support below things
1: Monitoring (***)
2: Alerting
3: Reporting
4: Logging
5: Using Custom Metrics enhance the capabilities of cloud watch
6: Cost Optimization (Reduce the cost of AWS)
7: Scaling

a: It will also give log insights.

By default cloud watch monitor cpu utilization

Monitoring: Monitor the resources

Metrics: Get the real life metrics
a metrics is something that will help you to understand about utilization and usage of cpu.

  How much cpu is used
  How much memory is used
  How many api calls is received

Alerts:
  Based on the metrics we get, some notifications so that we need to take actions to get the metrics outcome

LogInsights:
  Storing all the activities about resource utilization

Custom Metrics:
  CPU Utilization, Memory Utilization by default cloud watch should not support there we need to integrate with cloud watch to monitor Memory also

Cost Optimization:
  Reducing the Cost on cloud services usage

Scaling:
  Increases The services based on the traffic/CPU Utilization.

Whats Amazon CloudWatch:
Amazon CloudWatch is an AWS service for monitoring and managing resources in the cloud. It ensures the reliability, availability, and performance of AWS applications and infrastructure.

Key features of Amazon CloudWatch

Metrics and Alarms: Collect and monitor metrics, set alarms for predefined thresholds.

Dashboards: Create customized dashboards for a centralized view of performance and health.

Logs: Centralize logs, supporting aggregation, searching, and filtering for efficient log management.

Events: Trigger automated actions in response to changes in AWS environment.

Insights: Query log data interactively with CloudWatch Insights.

Synthetics: Create canaries to monitor application availability and latency.

Container Insights: Specialized monitoring for containerized applications.



# Docker
# Kubernetes
# Terraform
# Monitoring
# AWS
# Ansible
# CI/CD

